{"version":3,"sources":["../../src/services/person.js"],"names":["Sequelize","require","Op","getCountPerson","data","db","Person","findAndCountAll","getAllPerson","limit","offset","findAll","order","getAllPersonWhereById","id","where","lt","getPersonById","addNewPerson","create","deletePersonById","destroy","updatePersonById","person","forEach","e","update","name","age","comment","updateAgePersonById","inputAge","then","count"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMC,EAAE,GAAGF,SAAS,CAACE,EAArB,C,CACA;;AACO,SAASC,cAAT,GAA2B;AAChC,MAAMC,IAAI,GAAGC,gBAAGC,MAAH,CAAUC,eAAV,EAAb;;AACA,SAAOH,IAAP;AACD,C,CACD;;;AACO,SAASI,YAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AAC3C,SAAOL,gBAAGC,MAAH,CAAUK,OAAV,CAAkB;AAAED,IAAAA,MAAM,EAAEA,MAAV;AAAkBD,IAAAA,KAAK,EAAEA,KAAzB;AAAgCG,IAAAA,KAAK,EAAE,CAAC,CAAC,IAAD,EAAO,MAAP,CAAD;AAAvC,GAAlB,CAAP;AACD,C,CACD;;;AACO,SAASC,qBAAT,CAAgCJ,KAAhC,EAAuCC,MAAvC,EAA+CI,EAA/C,EAAmD;AACxD,SAAOT,gBAAGC,MAAH,CAAUK,OAAV,CAAkB;AAAEI,IAAAA,KAAK,EAAE;AAChCD,MAAAA,EAAE,sBACCZ,EAAE,CAACc,EADJ,EACSF,EADT;AAD8B,KAAT;AAKzBJ,IAAAA,MAAM,EAAEA,MALiB;AAMzBD,IAAAA,KAAK,EAAEA,KANkB;AAOzBG,IAAAA,KAAK,EAAE,CAAC,CAAC,IAAD,EAAO,MAAP,CAAD;AAPkB,GAAlB,CAAP;AAQD,C,CACD;;;AACO,SAASK,aAAT,CAAwBH,EAAxB,EAA4B;AACjC,SAAOT,gBAAGC,MAAH,CAAUK,OAAV,CAAkB;AAAEI,IAAAA,KAAK,EAAE;AAAED,MAAAA,EAAE,EAAEA;AAAN;AAAT,GAAlB,CAAP;AACD,C,CACD;;;AACO,SAASI,YAAT,CAAuBd,IAAvB,EAA6B;AAClC,SAAOC,gBAAGC,MAAH,CAAUa,MAAV,CAAiBf,IAAjB,CAAP;AACD,C,CACD;;;AACO,SAASgB,gBAAT,CAA2BN,EAA3B,EAA+B;AACpC,SAAOT,gBAAGC,MAAH,CAAUe,OAAV,CAAkB;AAAEN,IAAAA,KAAK,EAAE;AAAED,MAAAA,EAAE,EAAEA;AAAN;AAAT,GAAlB,CAAP;AACD,C,CACD;;;AACO,SAASQ,gBAAT,CAA2BC,MAA3B,EAAmCnB,IAAnC,EAAyC;AAC9CmB,EAAAA,MAAM,CAACC,OAAP,CAAe,UAACC,CAAD,EAAO;AACpBA,IAAAA,CAAC,CAACC,MAAF,CAAS;AACPC,MAAAA,IAAI,EAAEvB,IAAI,CAACuB,IAAL,GAAYvB,IAAI,CAACuB,IAAjB,GAAwBF,CAAC,CAACE,IADzB;AAEPC,MAAAA,GAAG,EAAExB,IAAI,CAACwB,GAAL,GAAWxB,IAAI,CAACwB,GAAhB,GAAsBH,CAAC,CAACG,GAFtB;AAGPC,MAAAA,OAAO,EAAEzB,IAAI,CAACyB,OAAL,GAAezB,IAAI,CAACyB,OAApB,GAA8BJ,CAAC,CAACI;AAHlC,KAAT;AAKD,GAND;AAOD,C,CACD;;;AACO,SAASC,mBAAT,CAA8BhB,EAA9B,EAAiCiB,QAAjC,EAA2C;AAChD1B,kBAAGC,MAAH,CAAUoB,MAAV,EACE;AACA;AAAEE,IAAAA,GAAG,EAAIG;AAAT,GAFF,EAGE;AACA;AAAEhB,IAAAA,KAAK,EACH;AACID,MAAAA,EAAE,EAAEA;AADR;AADJ,GAJF,EASIkB,IATJ,CASS,UAAAC,KAAK,EAAI;AACZ,WAAOA,KAAP;AACH,GAXH;AAYD","sourcesContent":["import db from '../db/models'\r\n\r\nconst Sequelize = require('sequelize')\r\nconst Op = Sequelize.Op\r\n// get count person\r\nexport function getCountPerson () {\r\n  const data = db.Person.findAndCountAll()\r\n  return data\r\n}\r\n// get all person \r\nexport function getAllPerson (limit, offset) {\r\n  return db.Person.findAll({ offset: offset, limit: limit, order: [['id', 'DESC']] })\r\n}\r\n// get more person with id min\r\nexport function getAllPersonWhereById (limit, offset, id) {\r\n  return db.Person.findAll({ where: {\r\n    id: {\r\n      [Op.lt]: id\r\n    }\r\n  },\r\n  offset: offset,\r\n  limit: limit,\r\n  order: [['id', 'DESC']] })\r\n}\r\n// get person with id\r\nexport function getPersonById (id) {\r\n  return db.Person.findAll({ where: { id: id } })\r\n}\r\n// add new person\r\nexport function addNewPerson (data) {\r\n  return db.Person.create(data)\r\n}\r\n// delete person with id \r\nexport function deletePersonById (id) {\r\n  return db.Person.destroy({ where: { id: id } })\r\n}\r\n// update person with id\r\nexport function updatePersonById (person, data) {\r\n  person.forEach((e) => {\r\n    e.update({\r\n      name: data.name ? data.name : e.name,\r\n      age: data.age ? data.age : e.age,\r\n      comment: data.comment ? data.comment : e.comment\r\n    })\r\n  })\r\n}\r\n// update age person\r\nexport function updateAgePersonById (id,inputAge) {\r\n  db.Person.update(\r\n    // Values to update\r\n    { age :  inputAge},\r\n    // Clause\r\n    { where: \r\n        {\r\n            id: id\r\n        }\r\n    }\r\n    ).then(count => {\r\n        return count;\r\n    });\r\n}\r\n"],"file":"person.js"}