{"version":3,"sources":["../../../src/db/models/index.js"],"names":["Sequelize","require","basename","path","__filename","env","process","NODE_ENV","config","__dirname","concat","db","sequelize","use_env_variable","database","username","password","_FS","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;AAEA;;AACA;;;;AACA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMC,QAAQ,GAAGC,IAAI,CAACD,QAAL,CAAcE,UAAd,CAAjB;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAMC,MAAM,GAAGP,OAAO,CAACQ,SAAS,CAACC,MAAV,CAAiB,yBAAjB,CAAD,CAAP,CAAqDL,GAArD,CAAf;;AACA,IAAMM,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIJ,MAAM,CAACK,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIZ,SAAJ,CAAcM,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACK,gBAAnB,CAAd,EAAoDL,MAApD,CAAZ;AACD,CAFD,MAEO;AACLI,EAAAA,SAAS,GAAG,IAAIZ,SAAJ,CAAcQ,MAAM,CAACM,QAArB,EAA+BN,MAAM,CAACO,QAAtC,EAAgDP,MAAM,CAACQ,QAAvD,EAAiER,MAAjE,CAAZ;AACD;;AAEDS,GAAG,CACAC,WADH,CACeT,SADf,EAEGU,MAFH,CAEU,UAAAC,IAAI,EAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKlB,QAAvC,IAAqDkB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGZ,SAAS,CAAC,QAAD,CAAT,CAAoBT,IAAI,CAACsB,IAAL,CAAUhB,SAAV,EAAqBW,IAArB,CAApB,CAAd;AACAT,EAAAA,EAAE,CAACa,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CARH;;AAUAG,MAAM,CAACC,IAAP,CAAYjB,EAAZ,EAAgBY,OAAhB,CAAwB,UAAAM,SAAS,EAAI;AACnC,MAAIlB,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BnB,IAAAA,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAd,CAAwBnB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACX,SAAH,GAAeA,SAAf;AAEA+B,MAAM,CAACC,OAAP,GAAiBrB,EAAjB","sourcesContent":["'use strict'\r\n\r\nimport * as _FS from 'fs'\r\nimport * as path from 'path'\r\nconst Sequelize = require('sequelize')\r\nconst basename = path.basename(__filename)\r\nconst env = process.env.NODE_ENV || 'development'\r\nconst config = require(__dirname.concat('/../../config/config.js'))[env]\r\nconst db = {}\r\n\r\nlet sequelize\r\nif (config.use_env_variable) {\r\n  sequelize = new Sequelize(process.env[config.use_env_variable], config)\r\n} else {\r\n  sequelize = new Sequelize(config.database, config.username, config.password, config)\r\n}\r\n\r\n_FS\r\n  .readdirSync(__dirname)\r\n  .filter(file => {\r\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js')\r\n  })\r\n  .forEach(file => {\r\n    const model = sequelize['import'](path.join(__dirname, file))\r\n    db[model.name] = model\r\n  })\r\n\r\nObject.keys(db).forEach(modelName => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db)\r\n  }\r\n})\r\n\r\ndb.sequelize = sequelize\r\ndb.Sequelize = Sequelize\r\n\r\nmodule.exports = db\r\n"],"file":"index.js"}